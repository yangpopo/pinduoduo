// 输入组件

import React, { Fragment, useState, useEffect } from 'react';
import "./inputComponents.scss";
import emoji from "assets/js/emoji"; // 图标地址
import PropTypes from 'prop-types'; // 校验传参类型

const InputComponents = (props) => {
  const [emojiKeyboardState,setEmojiKeyboardState] = useState(false); // 表情键盘
  const [fileKeyboardState,setFileKeyboardState] = useState(false); // 表情键盘
  let refInput = React.createRef();

  // 定义最后光标对象
  let lastEditRange;

  // 点击输入框
  const inputBoxClick = () => {
    // 获取选定对象
    let selection = getSelection()
    // 设置最后光标对象
    lastEditRange = selection.getRangeAt(0);
  }

  // 键盘事件
  const inputBoxKey = (e) => {
    // 获取选定对象
    var selection = getSelection()
    // 设置最后光标对象
    lastEditRange = selection.getRangeAt(0);
  }

  // emoji键盘输入
  const emojiClick = (code) => {
    // 获取编辑框对象
    var input = refInput.current;
    //表情图片
    var img = codeVShtml(code, true);

    // 编辑框设置焦点
    input.focus();
    // 获取选定对象
    var selection = getSelection();
    // 判断是否有最后光标对象存在
    if (lastEditRange) {
      // 存在最后光标对象，选定对象清除所有光标并添加最后光标还原之前的状态
      selection.removeAllRanges()
      selection.addRange(lastEditRange)
    }

    // 判断选定对象范围是编辑框还是文本节点
    if (selection.anchorNode.nodeName != '#text') {
      // console.log("图文")
      var childNodes = input.childNodes;
      var anchorOffset = selection.anchorOffset;
      var extentOffset = selection.extentOffset;

      //移除选中部分
      for (var i = anchorOffset; i < extentOffset; i++) {
        input.removeChild(childNodes[i]);
        i--;
        extentOffset--;
      }

      // 如果文本框的子元素大于0，则表示有其他元素，则按照位置插入表情节点
      // console.log("子元素数量:  " + input.childNodes.length, "光标的位置:  " + anchorOffset, "子元素: ", input.childNodes)
      if (input.childNodes.length > 0 && childNodes.length > anchorOffset) {
        for (var i = 0; i < childNodes.length; i++) {
          if (i == anchorOffset) {
            input.insertBefore(img, childNodes[i]);
            break;
          }
        }
      } else {
        // 否则直接插入一个表情元素
        input.appendChild(img);
      }
      // 创建新的光标对象
      var range = document.createRange();
      // 光标对象的范围界定为新建的表情节点
      range.selectNodeContents(input);
      // 光标位置定位在表情节点的最大长度
      range.setStart(input, anchorOffset + 1);
      // 使光标开始和光标结束重叠
      range.collapse(true);
      // 清除选定对象的所有光标对象
      selection.removeAllRanges();
      // 插入新的光标对象
      selection.addRange(range);
    } else {
      // console.log("文本")
      // 如果是文本节点则先获取光标对象
      var range = selection.getRangeAt(0)
      // 获取光标对象的范围界定对象，一般就是textNode对象
      var textNode = range.startContainer;
      // 获取光标位置
      var rangeStartOffset = range.startOffset;
      //删除选择内容
      textNode.deleteData(range.startOffset, range.endOffset - range.startOffset);
      //分割文本节点
      var textNodeSplited = textNode.splitText(range.startOffset);
      //插入图片
      textNodeSplited.parentElement.insertBefore(img, textNodeSplited);

      // 光标移动到到原来的位置加上新内容的长度
      range.setStart(textNodeSplited, 0)
      // 光标开始和光标结束重叠
      range.collapse(true)
      // 清除选定对象的所有光标对象
      selection.removeAllRanges()
      // 插入新的光标对象
      selection.addRange(range)
    }
    // 无论如何都要记录最后光标对象
    lastEditRange = selection.getRangeAt(0);
  }

  // code和html转换
  const codeVShtml = (val, type = true) => {
    if (type) {
      // code转html
      for (let i = 0; i < emoji.length; i++){
        if (emoji[i].name == val) {
          //表情图片
          var img = new Image();
          img.src = emoji[i].path;
          img.name = emoji[i].name;
          img.alt = emoji[i].name;
          return img
        }
      }
    } else {
      // html转code
      let code = val.match(/(name=")+([A-z|0-9]*)/)[2];
      return code
    }
  }

  // 发送提交
  const sendSubmit = () => {
    let srtHtml = refInput.current.innerHTML; // 输入框的全部html
    let imgHtmlArray = srtHtml.match(/<img[^>]+>/g) || []; // 图片数组
    // html转code
    for (let i = 0; i < imgHtmlArray.length; i++) {
      let imgCode = codeVShtml(imgHtmlArray[i], false);
      srtHtml = srtHtml.replace(imgHtmlArray[i], `[${ imgCode }]`);
    }
    props.sendSubmit(srtHtml)
  }

  // 删除按钮
  const backClick = () => {
    // 获取编辑框对象
    let input = refInput.current;

    // 编辑框设置焦点
    input.focus();
    // 获取选定对象
    let selection = getSelection();

    // 判断是否有最后光标对象存在
    if (lastEditRange) {
      // 存在最后光标对象，选定对象清除所有光标并添加最后光标还原之前的状态
      selection.removeAllRanges()
      selection.addRange(lastEditRange)
    }

    if (input.childNodes.length > 0) {
      input.normalize();
      var childNodes = input.childNodes;
      var anchorOffset = selection.anchorOffset;
      if (selection.anchorNode.nodeName != '#text') {
        try {
          let nodeValue = childNodes[anchorOffset - 1].nodeValue;
          if (nodeValue == null) {
            // console.log("图片", anchorOffset, childNodes[anchorOffset - 1], nodeValue);
            input.removeChild(childNodes[anchorOffset - 1]);
            // 创建新的光标对象
            var range = document.createRange();
            // 光标对象的范围界定为新建的表情节点
            range.selectNodeContents(input);
            // 光标位置定位在表情节点的最大长度
            range.setStart(input, anchorOffset - 1);
            // 使光标开始和光标结束重叠
            range.collapse(true);
            // 清除选定对象的所有光标对象
            selection.removeAllRanges();
            // 插入新的光标对象
            selection.addRange(range);
          } else {
            // console.log("文字", anchorOffset, childNodes[anchorOffset - 1], nodeValue);
            let text = document.createTextNode(nodeValue.substr(0, nodeValue.length - 1));
            input.replaceChild(text, childNodes[anchorOffset - 1]);
            // 创建新的光标对象
            var range = document.createRange();
            // 光标对象的范围界定为新建的表情节点
            range.selectNodeContents(input);
            // 光标位置定位在表情节点的最大长度
            range.setStart(input, anchorOffset);
            // 使光标开始和光标结束重叠
            range.collapse(true);
            // 清除选定对象的所有光标对象
            selection.removeAllRanges();
            // 插入新的光标对象
            selection.addRange(range);
          }
        } catch(err) {

        }
      } else {
        try {
          let nodeValue = selection.anchorNode.nodeValue;
          for (let i = 0; i < childNodes.length; i++){
            if (nodeValue == childNodes[i].nodeValue) {
              if (anchorOffset !== 0) {
                // 边缘是文字
                let text = document.createTextNode(nodeValue.substr(0, anchorOffset - 1) + nodeValue.substr(anchorOffset, nodeValue.length - 1));
                input.replaceChild(text, childNodes[i]);
                // 创建新的光标对象
                var range = document.createRange();
                // 光标对象的范围界定为新建的表情节点
                range.selectNodeContents(input);
                // 光标位置定位在表情节点的最大长度
                range.setStart(childNodes[i], anchorOffset - 1);
                // 使光标开始和光标结束重叠
                range.collapse(true);
                // 清除选定对象的所有光标对象
                selection.removeAllRanges();
                // 插入新的光标对象
                selection.addRange(range);
                break;
              } else {
                // 边缘是图片
                // console.log(childNodes[i].nodeValue, childNodes[i - 1].nodeValue, "++++++");
                input.removeChild(childNodes[i - 1]);
                // 创建新的光标对象
                var range = document.createRange();
                // 光标对象的范围界定为新建的表情节点
                range.selectNodeContents(input);
                // 光标位置定位在表情节点的最大长度
                range.setStart(input, i - 1);
                // 使光标开始和光标结束重叠
                range.collapse(true);
                // 清除选定对象的所有光标对象
                selection.removeAllRanges();
                // 插入新的光标对象
                selection.addRange(range);
                break;
              }
            }
          }
        } catch(err) {

        }
      }  
      // 无论如何都要记录最后光标对象
      lastEditRange = selection.getRangeAt(0);
    }
  }


  return (<div onTouchMove={(e) => {e.stopPropagation()}} className={props.className != undefined ? props.className + " input-components-box" : "input-components-box"}>
    <div className="input-box">
      <div className="input" ref={refInput} onClick={(e) => { inputBoxClick(e) }} onKeyUp={(e) => {inputBoxKey(e)}} suppressContentEditableWarning contentEditable="true"></div>
      {/* 图标键盘按钮 */}
      {
        emojiKeyboardState ? 
        <svg onClick={() => {setEmojiKeyboardState((val) => {return !val}); setFileKeyboardState(false)}} className="icon-look" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="5287"><path d="M513.488911 67.427692c-245.531066 0-444.574355 199.044312-444.574355 444.575378s199.043289 444.569238 444.574355 444.569238 444.570261-199.038172 444.570261-444.569238S759.019976 67.427692 513.488911 67.427692zM513.488911 902.830313c-215.85314 0-390.83236-174.975127-390.83236-390.828266 0-215.854163 174.97922-390.833383 390.83236-390.833383 215.854163 0 390.82929 174.97922 390.82929 390.833383C904.3182 727.855186 729.343073 902.830313 513.488911 902.830313zM425.145863 423.658999l35.335786 0c9.754155 0 17.671475-7.916297 17.671475-17.670451l0-70.673619c0-9.750061-7.91732-17.665335-17.671475-17.665335l-35.335786 0c-9.754155 0-17.671475 7.916297-17.671475 17.665335l0 70.673619C407.475412 415.742702 415.391708 423.658999 425.145863 423.658999zM425.145863 582.675666l35.335786 0c9.754155 0 17.671475-7.916297 17.671475-17.670451L478.153124 494.331595c0-9.754155-7.91732-17.665335-17.671475-17.665335l-35.335786 0c-9.754155 0-17.671475 7.91118-17.671475 17.665335l0 70.673619C407.475412 574.759369 415.391708 582.675666 425.145863 582.675666zM566.491055 423.658999l35.33681 0c9.754155 0 17.670451-7.916297 17.670451-17.670451l0-70.673619c0-9.750061-7.916297-17.665335-17.670451-17.665335l-35.33681 0c-9.750061 0-17.665335 7.916297-17.665335 17.665335l0 70.673619C548.82572 415.742702 556.742017 423.658999 566.491055 423.658999zM566.491055 582.675666l35.33681 0c9.754155 0 17.670451-7.916297 17.670451-17.670451L619.498316 494.331595c0-9.754155-7.916297-17.665335-17.670451-17.665335l-35.33681 0c-9.750061 0-17.665335 7.91118-17.665335 17.665335l0 70.673619C548.82572 574.759369 556.742017 582.675666 566.491055 582.675666zM283.799648 423.658999l35.335786 0c9.751085 0 17.666358-7.916297 17.666358-17.670451l0-70.673619c0-9.750061-7.916297-17.665335-17.666358-17.665335l-35.335786 0c-9.754155 0-17.671475 7.916297-17.671475 17.665335l0 70.673619C266.129196 415.742702 274.045493 423.658999 283.799648 423.658999zM743.179197 317.649594l-35.33681 0c-9.754155 0-17.670451 7.916297-17.670451 17.665335l0 70.673619c0 9.754155 7.916297 17.670451 17.670451 17.670451l35.33681 0c9.754155 0 17.665335-7.916297 17.665335-17.670451l0-70.673619C760.844531 325.564867 752.933351 317.649594 743.179197 317.649594zM336.802816 565.005214 336.802816 494.331595c0-9.754155-7.916297-17.665335-17.666358-17.665335l-35.335786 0c-9.754155 0-17.671475 7.91118-17.671475 17.665335l0 70.673619c0 9.754155 7.91732 17.670451 17.671475 17.670451l35.335786 0C328.886519 582.675666 336.802816 574.759369 336.802816 565.005214zM743.179197 476.66626l-35.33681 0c-9.754155 0-17.670451 7.91118-17.670451 17.665335l0 70.673619c0 9.754155 7.916297 17.670451 17.670451 17.670451l35.33681 0c9.754155 0 17.665335-7.916297 17.665335-17.670451L760.844531 494.331595C760.844531 484.57744 752.933351 476.66626 743.179197 476.66626zM707.842387 653.349285 319.135434 653.349285c-9.754155 0-17.670451 7.916297-17.670451 17.670451l0 17.665335c0 9.754155 7.916297 17.671475 17.670451 17.671475l388.706953 0c9.750061 0 17.666358-7.91732 17.666358-17.671475l0-17.665335C725.508745 661.264559 717.592448 653.349285 707.842387 653.349285z" p-id="5288"></path></svg>
        :
        <svg onClick={() => {setEmojiKeyboardState((val) => {return !val}); setFileKeyboardState(false)}} className="icon-look" viewBox="0 0 1044 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="10232"><path d="M515.204746 1024C377.571561 1024 248.168301 970.752 150.869338 874.116741 53.551412 777.367704-0.018958 648.798815 5.0e-06 512 5.0e-06 375.220148 53.608301 246.632296 150.94519 149.921185 248.244153 53.248 377.647412 0 515.299561 0 652.989635 0 782.373931 53.248 879.71082 149.921185 1080.623412 349.601185 1080.604449 674.417778 879.71082 874.021926 782.354968 970.714074 652.89482 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024 515.204746 1024ZM515.299561 66.730667C395.567412 66.730667 283.060153 113.019259 198.409487 197.101037 113.75882 281.163852 67.147857 393.02637 67.147857 512 67.128894 630.992593 113.720894 742.836148 198.333635 826.936889 282.965338 910.980741 395.510524 957.326222 515.204746 957.326222 634.955857 957.326222 747.557931 910.942815 832.227561 826.842074 1006.933338 653.255111 1006.933338 370.744889 832.227561 197.101037 747.576894 113.019259 635.031709 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667 515.299561 66.730667ZM332.174227 651.738074C332.174227 651.738074 392.552301 747.633778 515.185783 747.633778 637.819264 747.633778 718.24119 651.738074 718.24119 651.738074 718.24119 651.738074 763.828153 651.58637 763.80919 699.676444 763.80919 699.676444 684.771561 811.557926 515.185783 811.557926 345.600005 811.557926 290.39882 699.676444 290.39882 699.676444 290.39882 699.676444 288.730079 651.738074 332.174227 651.738074 332.174227 651.738074 332.174227 651.738074 332.174227 651.738074 332.174227 651.738074 332.174227 651.738074 332.174227 651.738074ZM365.454227 347.363556C330.714079 347.363556 302.345487 375.447704 302.345487 410.074074 302.345487 444.662519 330.695116 472.746667 365.454227 472.746667 400.365042 472.746667 428.562968 444.662519 428.562968 410.074074 428.562968 375.447704 400.365042 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556 365.454227 347.363556ZM688.791709 347.363556C653.994672 347.363556 625.720894 375.447704 625.720894 410.074074 625.720894 444.662519 653.994672 472.746667 688.791709 472.746667 723.664598 472.746667 751.900449 444.662519 751.900449 410.074074 751.900449 375.447704 723.664598 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556 688.791709 347.363556Z" p-id="10233"></path></svg>
      }
      {/* 文件键盘按钮 */}
      {
        props.fileKeyboard &&
        <svg className="icon-look" onClick={() => {setFileKeyboardState((val) => {return !val}); setEmojiKeyboardState(false)}} viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6729"><path d="M512 1024C229.239611 1024 0.017919 794.741738 0.017919 511.98135 0.017919 229.22096 229.239611-0.000731 512-0.000731 794.760389-0.000731 1023.982081 229.22096 1023.982081 511.98135 1023.982081 794.741738 794.760389 1024 512 1024ZM512 73.176136C269.649625 73.176136 73.158216 269.667545 73.158216 512.017919 73.158216 754.368294 269.649625 950.859703 512 950.859703 754.350375 950.859703 950.841784 754.368294 950.841784 512.017919 950.841784 269.667545 754.350375 73.176136 512 73.176136ZM548.570149 731.438811 475.429851 731.438811 475.429851 548.588068 292.579109 548.588068 292.579109 475.411201 475.429851 475.411201 475.429851 292.560457 548.570149 292.560457 548.570149 475.411201 731.420891 475.411201 731.420891 548.588068 548.570149 548.588068 548.570149 731.438811Z" p-id="6730"></path></svg>
      }
    </div>
    <div className="emoji-box" style={{ height: emojiKeyboardState ? "30vh" : "0px"}}>
      <div className="emoji">
        {
          emoji.map((item, index) => {
            return (<img emoji="true" src={item.path} name={item.name} alt={item.name} key={item.name} onClick={() => {emojiClick(item.name)}}/>)
          })
        }
      </div>
      {
        emojiKeyboardState && 
        <div className="evaluate-but">
          <div className="back-but" onClick={backClick} ><svg className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="14474"><path d="M723.9 418.3c-11.6-11.6-30.5-11.6-42.2 0l-55.6 55.6-55.6-55.6c-11.6-11.6-30.5-11.6-42.2 0-11.6 11.6-11.6 30.5 0 42.2L584 516l-54.6 54.6c-11.6 11.6-11.6 30.5 0 42.2 11.6 11.6 30.5 11.6 42.2 0l54.6-54.6 54.6 54.6c11.6 11.6 30.5 11.6 42.2 0 11.6-11.6 11.6-30.5 0-42.2L668.3 516l55.6-55.6c11.7-11.6 11.7-30.5 0-42.1z m0 0" p-id="14475"></path><path d="M887.7 226.9H361.1c-7.4-3.1-286.4 263.6-286.4 263.6l-3.8 3.8c-3.3 3.3-5.2 7.5-5.8 12-2.5 8.6-1.1 17.1 4.5 22.7L337 797.1h550.6c39.9 0 72.3-31.5 72.3-70.4V297.3c0.1-38.9-32.3-70.4-72.2-70.4zM908.3 690c0 32.2-29.9 58.4-66.7 58.4H376c-0.2-0.3-0.5-0.5-0.8-0.8L138.1 510.3l234.7-234.7h468.9c36.8 0 66.7 26.1 66.7 58.4v356z m0 0" p-id="14476"></path></svg></div>
          <div className="submit-but" onClick={sendSubmit}>发送</div>
        </div>
      }
    </div>
    <div className="file-box" style={{ height: fileKeyboardState ? "30vh" : "0px"}}>
      <div className="file">
        <dl className="project-unit">
          <dt><svg className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7504"><path d="M919.096192 1.803429 106.384339 1.803429c-57.74173 0-104.670881 46.928152-104.670881 104.670881l0 812.855807c0 57.74173 46.928152 104.669882 104.670881 104.669882l812.78383 0c57.74173 0 104.669882-46.928152 104.669882-104.669882L1023.838051 106.402334C1023.768073 48.659604 976.836923 1.803429 919.096192 1.803429zM826.535479 292.242533l-2.161316 1.153635-0.288909 2.450225C801.808303 449.608741 667.944658 565.597042 512.739766 565.597042c-155.202893 0-289.069537-115.988301-311.344489-269.750649l-0.359886-2.450225-2.163316-1.153635c-15.427119-9.155103-24.654199-24.654199-24.654199-41.666816 0-26.96047 21.915066-48.875535 48.947513-48.875535 26.96047 0 48.875535 21.915066 48.875535 48.875535 0 14.201507-6.41597 27.46531-18.166252 37.196231l-2.30727 1.80243 0.50484 2.884087c20.5445 128.963195 130.189807 222.533589 260.667523 222.533589 130.478716 0 240.123024-93.641371 260.667523-222.533589l0.50584-2.81211-2.235293-1.80243c-11.822259-9.803898-18.166252-22.995724-18.166252-37.197231 0-26.96047 21.915066-48.875535 48.875535-48.875535l0 0 0 0 0 0c27.032447 0 48.947513 21.914066 48.947513 48.875535C851.261655 267.589333 842.034575 283.088429 826.535479 292.242533z" p-id="7505"></path></svg></dt>
          <dd>商品</dd>
        </dl>
        <dl className="project-unit">
          <dt><svg className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="10510"><path d="M679.455388 0.728139c-4.095272 0-22.387485-1.638109-68.527545 0H206.588028a136.509053 136.509053 0 0 0-136.509053 134.597926v754.076009a136.509053 136.509053 0 0 0 136.509053 134.597926h610.195467a136.509053 136.509053 0 0 0 136.509053-134.597926V269.923992zM277.0267 326.43874h247.354404a22.387485 22.387485 0 0 1 0 44.774969H276.753682a22.387485 22.387485 0 0 1 0-44.774969zM687.918949 792.480646H288.49346c-18.565231 0-33.308209-10.374688-33.308209-23.206539s15.289014-23.206539 33.308209-23.206539h399.425489c18.292213 0 33.308209 10.374688 33.308209 23.206539s-15.015996 23.206539-33.308209 23.206539z m0-232.611426H288.49346c-18.565231 0-33.308209-10.10167-33.308209-22.387485s16.108068-23.479557 33.308209-23.479557h399.425489c18.292213 0 33.308209 10.10167 33.308209 22.387485s-15.015996 22.660503-33.308209 22.660503z m59.790965-289.945228H752.62424c-31.943118 0-76.991106-30.30501-76.991106-67.162454V63.522304l212.954123 208.312814z" p-id="10511"></path></svg></dt>
          <dd>订单</dd>
        </dl>
        <dl className="project-unit">
          <dt><svg className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="11166"><path d="M832 128H192a60.16 60.16 0 0 0-64 64v640a60.16 60.16 0 0 0 64 64h640a60.16 60.16 0 0 0 64-64V192a60.16 60.16 0 0 0-64-64z m0 64v237.44a301.44 301.44 0 0 0-64-7.04 354.56 354.56 0 0 0-320 204.8c-6.4 12.8-25.6 25.6-38.4 12.8a264.96 264.96 0 0 0-121.6-32 234.24 234.24 0 0 0-96 20.48V192zM320 256a60.16 60.16 0 0 0-64 64 60.16 60.16 0 0 0 64 64 60.16 60.16 0 0 0 64-64 60.16 60.16 0 0 0-64-64z" p-id="11167"></path></svg></dt>
          <dd>照片</dd>
        </dl>
        <dl className="project-unit">
          <dt><svg className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="12161"><path d="M230.4 224c17.792 0 47.445333-11.392 66.688-25.728l59.733333-44.544C375.850667 139.52 410.24 128 433.92 128h156.16c23.552 0 57.898667 11.392 77.098667 25.728l59.733333 44.544c19.072 14.208 53.589333 25.728 66.688 25.728h93.866667c51.712 0 93.866667 40.021333 93.866666 89.6V806.4c0 49.664-42.154667 89.6-93.866666 89.6H136.533333C84.48 896 42.666667 855.978667 42.666667 806.4V313.6c0-49.664 41.984-89.6 93.866666-89.6h93.866667zM512 725.333333a213.333333 213.333333 0 1 0 0-426.666666 213.333333 213.333333 0 0 0 0 426.666666z m0-85.333333a128 128 0 1 1 0-256 128 128 0 0 1 0 256z" p-id="12162"></path></svg></dt>
          <dd>拍摄</dd>
        </dl>
        <dl className="project-unit">
          <dt><svg className="icon" viewBox="0 0 1034 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="13551"><path d="M1011.982 842.518 606.673 140.565c-49.575-85.822-130.595-85.822-180.157 0L21.205 842.518c-49.562 85.91-9.015 155.99 90.04 155.99l810.693 0C1020.997 998.507 1061.502 928.423 1011.982 842.518zM460.924 339.737c14.565-15.747 33.082-23.622 55.665-23.622 22.595 0 41.095 7.792 55.675 23.307 14.485 15.55 21.725 34.997 21.725 58.382 0 20.12-30.235 168.07-40.32 275.704l-72.825 0c-8.845-107.635-41.652-255.584-41.652-275.704C439.194 374.774 446.446 355.407 460.924 339.737zM571.244 851.538c-15.32 14.92-33.55 22.355-54.65 22.355-21.095 0-39.33-7.435-54.647-22.355-15.275-14.885-22.867-32.915-22.867-54.09 0-21.065 7.592-39.29 22.867-54.565 15.317-15.28 33.552-22.92 54.647-22.92 21.1 0 39.33 7.64 54.65 22.92 15.265 15.275 22.875 33.5 22.875 54.565C594.119 818.623 586.509 836.653 571.244 851.538z" p-id="13552"></path></svg></dt>
          <dd>投诉</dd>
        </dl>
        <dl className="project-unit">
          <dt><svg className="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="14399"><path d="M819.004139 1023.653099 204.987674 1023.653099c-75.352175 0-136.439462-61.09138-136.439462-136.448672L68.548212 205.000977 477.888088 341.448626l68.215638 0 409.346015-136.448672 0 682.204473C955.450764 962.560696 894.357338 1023.653099 819.004139 1023.653099L819.004139 1023.653099zM547.769668 680.401408l99.019201-0.23843c24.798802 0.23843 33.634028-12.620435 34.090423-28.120454 0.382717-13.446243-12.320607-38.783305-34.69008-39.390125l-98.985432 0 0-23.876804c0 0 75.133188-76.735685 94.632287-94.417393 19.435655-17.764596 24.348548-31.674397 12.33391-46.041616-12.177344-14.661931-33.646308-13.754259-49.365314-0.743944-15.951297 13.222139-92.681866 84.505649-92.681866 84.505649s-65.869197-68.023256-80.127945-81.70793c-12.80463-12.32777-39.98569-24.272823-54.612829-7.714705-15.261589 17.307178-3.397377 38.926568 6.160303 48.381917 9.530051 9.366322 91.958388 96.518241 91.958388 96.518241l-0.150426 26.224268c0 0-88.022753 0-103.290481 0-15.267728 0-28.756951 27.164686-28.271904 41.600467 0.490164 14.361079 12.05557 25.624611 28.238135 25.624611 16.175401 0 102.982466-0.600681 102.982466-0.600681l-0.224104 73.139787c0 0-91.719958 0-106.987686 0-15.267728 0-28.080545 15.377222-28.695552 29.811979-0.599657 14.442944 11.412934 34.008558 28.695552 34.008558 17.308201 0 106.754373 0 106.754373 0s-0.184195 25.022906 0.457418 35.446303c1.439792 23.277146 16.708544 32.80208 37.113269 33.18275 20.412912 0.388856 34.896788-16.693194 34.848693-31.967062-0.069585-12.622482-0.369414-36.661991-0.369414-36.661991s88.846514-0.157589 105.629759 0c16.783245 0.14224 29.330002-16.84362 28.647457-34.008558-0.599657-17.232476-11.032264-30.411637-36.505425-30.411637-25.480324 0-97.170087 0-97.170087 0L547.769668 680.401408 547.769668 680.401408zM546.104749 273.220708 477.888088 273.220708 68.549236 136.787386c0-75.363432 61.086264-136.440485 136.439462-136.440485l614.016465 0c75.352175 0 136.446625 61.077054 136.446625 136.440485L546.104749 273.220708 546.104749 273.220708z" p-id="14400"></path></svg></dt>
          <dd>红包</dd>
        </dl>
      </div>
    </div>
  </div>)
}

// 参数类型检查
InputComponents.propTypes = {
  sendSubmit: PropTypes.func.isRequired,
  className: PropTypes.string,
  fileKeyboard: PropTypes.bool,
};

// 默认值
InputComponents.defaultProps = {
  fileKeyboard: false
};
export default InputComponents;